---
# Example showing how to end the play for specific targets
# - name: End the play for hosts that do not have schemas defined
#   meta: end_host
#   when:
#   - mdd_schema_list is not defined

- name: Search for schema data files
  include_role:
    name: ciscops.mdd.common
    tasks_from: files_in_path
  vars:
    mdd_file_patterns: "{{ mdd_validate_patterns }}"

- name: Read in schema data files
  set_fact:
    mdd_file_data: "{{ lookup('file', item) | from_yaml }}"
  loop: "{{ mdd_file_list }}"
  register: mdd_file_list_data

- name: Find relevant schema entries
  set_fact:
    mdd_schema_list: "{{ mdd_schema_list | default([]) + mdd_item.mdd_schemas }}"
  with_items: "{{ mdd_file_list_data.results | map(attribute='ansible_facts.mdd_file_data') | default([]) }}"
  when: ('all' in mdd_item.mdd_tags | default(['all'])) or (mdd_item.mdd_tags | intersect(tags | default([])) | length)
  loop_control:
    loop_var: 'mdd_item'
  vars:
    mdd_schema_list: []

#
# Iterate over each of the schema files ignoring the output and collecting
# failures for use a a report.
- name: Validate data
  include_role:
    name: ciscops.mdd.validate
    tasks_from: run_validate
  with_items: "{{ mdd_schema_list | default ([]) }}"
  loop_control:
    loop_var: 'validate_item'

- debug:
    msg: "Failed schemas: {{ validation_failures | join(',') }}"
  failed_when: validation_failures is defined and validation_failures
  when: validation_failures is defined and validation_failures
