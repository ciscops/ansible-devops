---
- name: Check for docker presence
  shell: which docker
  failed_when: false
  register: docker_result

- name: Set docker presence
  set_fact:
    docker_is_present: "{{ docker_result.rc == 0 }}"

- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true
  when: docker_is_present is false

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: latest
    update_cache: true
  when: docker_is_present is false

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: docker_is_present is false

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present
  when: docker_is_present is false

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: latest
    update_cache: true
  when: docker_is_present is false

- name: Install Docker Compose plugin
  apt:
    name: docker-compose
    state: present
  when: docker_is_present is false

- name: Check for directory presence
  shell: test -d "{{ telemetry_base_dir }}"
  failed_when: false
  register: dir_result

- name: Set directory presence
  set_fact:
    directory_is_present: "{{ dir_result.rc == 0 }}"

#Create new directory for telemetry
- name: Create telemetry directory
  shell: mkdir -p "{{ telemetry_base_dir }}"
  when: directory_is_present is false

- name: execute command
  shell: 'sysctl -w vm.max_map_count=262144' 

- name: Create docker-compose config file
  copy:
    content: "{{ elastic_docker_template }}"
    dest: "{{ telemetry_base_dir }}/docker-compose.yml"
    force: true

- name: Copy filebeat file
  ansible.builtin.template:
    src: "{{ mdd_telemetry }}/filebeat.yml.j2"
    dest: "{{ telemetry_base_dir }}/filebeat.yml"
    mode: 0600

# - name: Create filebeat config file
#   copy:
#     content: "{{ filebeat_template }}"
#     dest: "{{ telemetry_base_dir }}/filebeat.yml"
#     force: true

# Create docker containers
- name: Docker Compose Up
  docker_compose:
    project_src: "{{ telemetry_base_dir }}"
    state: present

# Wait for 10 seconds for docker container to come up
- name: Pause to allow containers to boot up
  pause:
    seconds: 10

- name: Check container state
  docker_container_info:
    name: elastic
  loop:
    - es01
    - kibana
    - filebeat
  register: container_info
  failed_when: container_info.container.State is not defined
