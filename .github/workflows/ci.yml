name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 6 * * *'
env:
  NAMESPACE: ciscops
  COLLECTION_NAME: mdd


jobs:
###
# Sanity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
        # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.13
          - stable-2.14
          - devel
    runs-on: ubuntu-latest
    steps:

      # ansible-test requires the collection to be in a directory in the form
      # .../ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
          python-version: 3.9

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required
      # and all python versions ansible supports.
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

  test_elevate:
    name: Test elevate (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.13
          - stable-2.14
          - devel
    runs-on: ubuntu-latest
    env:
      ANSIBLE_COLLECTIONS_PATHS: ./ansible_collections
      base_path: elevate_test/mdd
    steps:
        - name: Checkout model-driven-devops/mdd repository
          uses: actions/checkout@v2
          with:
            repository: model-driven-devops/mdd
            path: ${{env.base_path}}

        - name: Run ls
          run: ls -la
          working-directory: ${{env.base_path}}

        - name: Install collection from model-driven-devops/mdd/requirements.yml
          run: ansible-galaxy collection install -r requirements.yml
          working-directory: ${{env.base_path}}

        - name: Galaxy collection list
          run: ansible-galaxy collection list
          working-directory: ${{env.base_path}}

        - name: Remove exiting ansible-mdd collection
          run: rm -rf ${{env.base_path}}/${{env.ANSIBLE_COLLECTIONS_PATHS}}/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        - name: Install current branch ansible-mdd collection
          uses: actions/checkout@v2
          with:
            path: ${{env.base_path}}/${{env.ANSIBLE_COLLECTIONS_PATHS}}/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        - name: Run ls
          run: ls -la
          working-directory: ${{env.base_path}}/.github

        - name: Run ls
          run: ls -la
          working-directory: ${{env.base_path}}/${{env.COLLECTIONS_PATHS}}/.github

        - name: Remove the current reference topology
          run: rm -r mdd-data
          working-directory: ${{env.base_path}}

        - name: Ls to find mdd-data
          run: ls -la
          working-directory: ${{env.base_path}}/.github

        - name: Ls to find mdd-data
          run: ls -la
          working-directory: ${{env.base_path}}/.github

        # .github/workflows/testing-files/mdd-data
        - name: Copy in testing reference topology
          run: cp -r testing/testing-files/mdd-data ./
          working-directory: ${{env.base_path}}

        - name: Ls to find mdd-data
          run: ls -la
          working-directory: ${{env.base_path}}

        - name: Run show
          run: ansible-playbook ciscops.mdd.show
          working-directory: ${{env.base_path}}

        # - name: Install collection
        #   run: ansible-galaxy collection install -r requirements.yml
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/mdd

        # - name: Install current collection
        #                                          https://github.com/model-driven-devops/ansible-mdd.git,ppajersk-dev
        #   run: ansible-galaxy collection install https://github.com/${{ github.repository }}/tree/${{ github.ref }}
        #   working-directory: elevate_test/mdd

          # https://github.com/model-driven-devops/ansible-mdd/tree/ppajersk-dev

          #https://github.com/model-driven-devops/ansible-mdd.git,ppajersk-dev
        #/ansible_collections/${{ env.NAMESPACE }}/${{ env.COLLECTION_NAME }}/mdd

          # - name: Check out code
        #   uses: actions/checkout@v2
        #   with:
        #     path: elevate_test/mdd/ansible_collections

        # - name: Run ls
        #   run: ls
        #   working-directory: elevate_test/mdd/ansible_collections/playbooks

        # - name: Run show
        #   # run: ansible-playbook ciscops.mdd.show
        #   run: ansible-playbook elevate_test/mdd/ansible_collections/playbooks/show.yml
        #   working-directory: elevate_test/mdd

        # - name: Checkout mdd repository
        #   uses: actions/checkout@v2
        #   with:
        #     repository: model-driven-devops/mdd
        #     path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/mdd

        # - name: Run ls
        #   run: ls
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/mdd

        # - name: Install collection
        #   run: ansible-galaxy collection install -r requirements.yml
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/mdd

        # - name: Run ls
        #   run: ls
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/mdd

        # - name: Run show
        #   run: ansible-playbook ciscops.mdd.show
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/mdd

        # - name: Run Show
        #   run: ansible-playbook show.yml
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/playbooks

        # - name: Run elevate test
        #   run: ls
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/playbooks

        # - name: Run elevate test
        #   run: ansible-playbook test_elevate.yml
        #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/playbooks
          #ansible-playbook ${{env.NAMESPACE}}.${{env.COLLECTION_NAME}}.test_elevate.yml
